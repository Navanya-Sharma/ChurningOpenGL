#shader compute#version 460 corelayout(local_size_x = 1, local_size_y = 1, local_size_z = 1) in;layout(rg32f, binding = 0) uniform image2D out_tex;#define H(p) (sin(fract(sin(dot(p, vec2(12.9898, 78.233)))) * 43758.5453)*10.)*.5+.5void main() {    vec2 vert[3] = {vec2(-0.5f,-0.5f),vec2(0.5f,-0.5f), vec2(0.0f,0.5f)};    // get position to read/write data from    ivec2 pos = ivec2( gl_GlobalInvocationID.xy );    // get value stored in the image    vec2 in_val = imageLoad( out_tex, pos ).rg;    int r =int(H(in_val))%3;        vec2 curvert = vert[r];    // store new value in image    //imageStore( out_tex, pos, vec4( 1, 2, 0.0, 1.0 ) );    imageStore( out_tex, pos, vec4( (in_val.r + curvert.x)/2, (in_val.g +curvert.y)/2, 0.0, 1.0 ) );        }